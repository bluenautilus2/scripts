<?xml version="1.0" encoding="UTF-8"?>
<Server port="8005" shutdown="SHUTDOWN">
  <!-- Comment these entries out to disable JMX MBeans support used for the 

       administration web application -->
  <!--  <Listener className="org.apache.catalina.mbeans.ServerLifecycleListener"/> -->
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"/>
  <!-- Global JNDI resources -->
  <GlobalNamingResources>
    <!-- Test entry for demonstration purposes -->
    <Environment name="simpleValue" type="java.lang.Integer" value="30"/>
    <!-- Editable user database that can also be used by

         UserDatabaseRealm to authenticate users -->
    <Resource auth="Container" description="User database that can be updated and saved" factory="org.apache.catalina.users.MemoryUserDatabaseFactory" name="UserDatabase" pathname="conf/tomcat-users.xml" type="org.apache.catalina.UserDatabase"/>
  </GlobalNamingResources>

  <!-- Define the Tomcat Stand-Alone Service -->
  <Service name="Catalina">
    <!-- Define a non-SSL HTTP/1.1 Connector on port 8080 -->
    <Connector acceptCount="100" connectionTimeout="0" disableUploadTimeout="true" enableLookups="false" maxSpareThreads="75" maxThreads="150" minSpareThreads="25" port="8080"/>
    <!-- Note : To disable connection timeouts, set connectionTimeout value

     to 0 -->
    <!-- Note : To use gzip compression you could set the following properties :

                

                                                   compression="on" 

                                                   compressionMinSize="2048" 

                                                   noCompressionUserAgents="gozilla, traviata" 

                                                   compressableMimeType="text/html,text/xml"

                -->
    <!-- Define a SSL HTTP/1.1 Connector on port 8443 -->
    <Connector keystoreFile="/opt/develWorkspace/keystore.jks" keystorePass="changeit" SSLEnabled="true" acceptCount="100" clientAuth="false" disableUploadTimeout="true" enableLookups="false" maxSpareThreads="75" maxThreads="150" minSpareThreads="25" port="8443" scheme="https" secure="true" sslProtocol="TLS"/>
    <!-- Define an AJP 1.3 Connector on port 8009 -->
    <!--

    <Connector port="8009" 

               enableLookups="false" redirectPort="8443" protocol="AJP/1.3" />

     -->
    <!-- Define a Proxied HTTP/1.1 Connector on port 8082 -->
    <!-- See proxy documentation for more information about using this. -->
    <!--

    <Connector port="8082" 

               maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

               enableLookups="false" acceptCount="100" connectionTimeout="20000"

               proxyPort="80" disableUploadTimeout="true" />

    -->
    <!-- An Engine represents the entry point (within Catalina) that processes

         every request.  The Engine implementation for Tomcat stand alone

         analyzes the HTTP headers included with the request, and passes them

         on to the appropriate Host (virtual host). -->
    <!-- You should set jvmRoute to support load-balancing via AJP ie :

    <Engine name="Standalone" defaultHost="localhost" jvmRoute="jvm1">         

    -->
    <!-- Define the top level container in our container hierarchy -->
    <Engine defaultHost="localhost" name="Catalina">
      <!-- The request dumper valve dumps useful debugging information about

           the request headers and cookies that were received, and the response

           headers and cookies that were sent, for all requests received by

           this instance of Tomcat.  If you care only about requests to a

           particular virtual host, or a particular application, nest this

           element inside the corresponding <Host> or <Context> entry instead.



           For a similar mechanism that is portable to all Servlet 2.4

           containers, check out the "RequestDumperFilter" Filter in the

           example application (the source for this filter may be found in

           "$CATALINA_HOME/webapps/examples/WEB-INF/classes/filters").



           Request dumping is disabled by default.  Uncomment the following

           element to enable it. -->
      <!--

      <Valve className="org.apache.catalina.valves.RequestDumperValve"/>

      -->
      <!-- Because this Realm is here, an instance will be shared globally -->
      <!-- This Realm uses the UserDatabase configured in the global JNDI

           resources under the key "UserDatabase".  Any edits

           that are performed against this UserDatabase are immediately

           available for use by the Realm.  -->
      <Realm className="org.apache.catalina.realm.UserDatabaseRealm" resourceName="UserDatabase"/>
      <!-- Comment out the old realm but leave here for now in case we

           need to go back quickly -->
      <!--

      <Realm className="org.apache.catalina.realm.MemoryRealm" />

      -->
      <!-- Replace the above Realm with one of the following to get a Realm

           stored in a database and accessed via JDBC -->
      <!--

      <Realm  className="org.apache.catalina.realm.JDBCRealm"

             driverName="org.gjt.mm.mysql.Driver"

          connectionURL="jdb/optmysql://localhost/authority"

         connectionName="test" connectionPassword="test"

              userTable="users" userNameCol="user_name" userCredCol="user_pass"

          userRoleTable="user_roles" roleNameCol="role_name" />

      -->
      <!--

      <Realm  className="org.apache.catalina.realm.JDBCRealm"

             driverName="oracle.jdbc.driver.OracleDriver"

          connectionURL="jdb/optoracle:thin:@ntserver:1521:ORCL"

         connectionName="scott" connectionPassword="tiger"

              userTable="users" userNameCol="user_name" userCredCol="user_pass"

          userRoleTable="user_roles" roleNameCol="role_name" />

      -->
      <!--

      <Realm  className="org.apache.catalina.realm.JDBCRealm"

             driverName="sun.jdbc.odbc.JdbcOdbcDriver"

          connectionURL="jdb/optodb/optCATALINA"

              userTable="users" userNameCol="user_name" userCredCol="user_pass"

          userRoleTable="user_roles" roleNameCol="role_name" />

      -->
      <!-- Define the default virtual host

           Note: XML Schema validation will not work with Xerces 2.2.

       -->
      <Host appBase="webapps" autoDeploy="true" name="localhost" unpackWARs="true" xmlNamespaceAware="false" xmlValidation="false">
        <!-- Defines a cluster for this node,

             By defining this element, means that every manager will be changed.

             So when running a cluster, only make sure that you have webapps in there

             that need to be clustered and remove the other ones.

             A cluster has the following parameters:



             className = the fully qualified name of the cluster class



             name = a descriptive name for your cluster, can be anything



             mcastAddr = the multicast address, has to be the same for all the nodes



             mcastPort = the multicast port, has to be the same for all the nodes

             

             mcastBindAddr = bind the multicast socket to a specific address

             

             mcastTTL = the multicast TTL if you want to limit your broadcast

             

             mcastSoTimeout = the multicast readtimeout 



             mcastFrequency = the number of milliseconds in between sending a "I'm alive" heartbeat



             mcastDropTime = the number a milliseconds before a node is considered "dead" if no heartbeat is received



             tcpThreadCount = the number of threads to handle incoming replication requests, optimal would be the same amount of threads as nodes 



             tcpListenAddress = the listen address (bind address) for TCP cluster request on this host, 

                                in case of multiple ethernet cards.

                                auto means that address becomes

                                InetAddress.getLocalHost().getHostAddress()



             tcpListenPort = the tcp listen port



             tcpSelectorTimeout = the timeout (ms) for the Selector.select() method in case the OS

                                  has a wakup bug in java.nio. Set to 0 for no timeout



             printToScreen = true means that managers will also print to std.out



             expireSessionsOnShutdown = true means that 



             useDirtyFlag = true means that we only replicate a session after setAttribute,removeAttribute has been called.

                           false means to replicate the session after each request.

                            false means that replication would work for the following piece of code: (only for SimpleTcpReplicationManager)

                            <%

                            HashMap map = (HashMap)session.getAttribute("map");

                            map.put("key","value");

                            %>

             replicationMode = can be either 'pooled', 'synchronous' or 'asynchronous'.

                               * Pooled means that the replication happens using several sockets in a synchronous way. Ie, the data gets replicated, then the request return. This is the same as the 'synchronous' setting except it uses a pool of sockets, hence it is multithreaded. This is the fastest and safest configuration. To use this, also increase the nr of tcp threads that you have dealing with replication.

                               * Synchronous means that the thread that executes the request, is also the

                               thread the replicates the data to the other nodes, and will not return until all

                               nodes have received the information.

                               * Asynchronous means that there is a specific 'sender' thread for each cluster node,

                               so the request thread will queue the replication request into a "smart" queue,

                              and then return to the client.

                               The "smart" queue is a queue where when a session is added to the queue, and the same session

                               already exists in the queue from a previous request, that session will be replaced

                               in the queue instead of replicating two requests. This almost never happens, unless there is a 

                               large network delay.

        -->
        <!--

            When configuring for clustering, you also add in a valve to catch all the requests

            coming in, at the end of the request, the session may or may not be replicated.

            A session is replicated if and only if all the conditions are met:

            1. useDirtyFlag is true or setAttribute or removeAttribute has been called AND

            2. a session exists (has been created)

            3. the request is not trapped by the "filter" attribute



            The filter attribute is to filter out requests that could not modify the session,

            hence we don't replicate the session after the end of this request.

            The filter is negative, ie, anything you put in the filter, you mean to filter out,

            ie, no replication will be done on requests that match one of the filters.

            The filter attribute is delimited by ;, so you can't escape out ; even if you wanted to.



            filter=".*\.gif;.*\.js;" means that we will not replicate the session after requests with the URI

            ending with .gif and .js are intercepted.

            

            The deployer element can be used to deploy apps cluster wide.

           Currently the deployment only deploys/undeploys to working members in the cluster

            so no WARs are copied upons startup of a broken node.

            The deployer watches a directory (watchDir) for WAR files when watchEnabled="true"

            When a new war file is added the war gets deployed to the local instance,

            and then deployed to the other instances in the cluster.

            When a war file is deleted from the watchDir the war is undeployed locally 

            and cluster wide

        -->
        <!--

        <Cluster className="org.apache.catalina.cluster.tcp.SimpleTcpCluster"

                 managerClassName="org.apache.catalina.cluster.session.DeltaManager"

                 expireSessionsOnShutdown="false"

                 useDirtyFlag="true"

                 notifyListenersOnReplication="true">



            <Membership 

                className="org.apache.catalina.cluster.mcast.McastService"

                mcastAddr="228.0.0.4"

                mcastPort="45564"

                mcastFrequency="500"

                mcastDropTime="3000"/>



            <Receiver 

                className="org.apache.catalina.cluster.tcp.ReplicationListener"

                tcpListenAddress="auto"

                tcpListenPort="4001"

                tcpSelectorTimeout="100"

                tcpThreadCount="6"/>



            <Sender

                className="org.apache.catalina.cluster.tcp.ReplicationTransmitter"

                replicationMode="pooled"

                ackTimeout="15000"/>



            <Valve className="org.apache.catalina.cluster.tcp.ReplicationValve"

                   filter=".*\.gif;.*\.js;.*\.jpg;.*\.htm;.*\.html;.*\.txt;"/>

                   

            <Deployer className="org.apache.catalina.cluster.deploy.FarmWarDeployer"

                      tempDir="/tmp/war-temp/"

                      deployDir="/tmp/war-deploy/"

                      watchDir="/tmp/war-listen/"

                     watchEnabled="false"/>

        </Cluster>

        -->
        <!-- Normally, users must authenticate themselves to each web app

             individually.  Uncomment the following entry if you would like

             a user to be authenticated the first time they encounter a

             resource protected by a security constraint, and then have that

             user identity maintained across *all* web applications contained

             in this virtual host. -->
        <!--

        <Valve className="org.apache.catalina.authenticator.SingleSignOn" />

        -->
        <!-- Access log processes all requests for this virtual host.  By

             default, log files are created in the "logs" directory relative to

             $CATALINA_HOME.  If you wish, you can specify a different

             directory with the "directory" attribute.  Specify either a relative

             (to $CATALINA_HOME) or absolute path to the desired directory.

        -->
        <!--

        <Valve className="org.apache.catalina.valves.AccessLogValve"

                 directory="logs"  prefix="localhost_access_log." suffix=".txt"

                 pattern="common" resolveHosts="false"/>

        -->
        <!-- Access log processes all requests for this virtual host.  By

             default, log files are created in the "logs" directory relative to

             $CATALINA_HOME.  If you wish, you can specify a different

             directory with the "directory" attribute.  Specify either a relative

             (to $CATALINA_HOME) or absolute path to the desired directory.

             This access log implementation is optimized for maximum performance,

             but is hardcoded to support only the "common" and "combined" patterns.

        -->
        <!--

        <Valve className="org.apache.catalina.valves.FastCommonAccessLogValve"

                 directory="logs"  prefix="localhost_access_log." suffix=".txt"

                 pattern="common" resolveHosts="false"/>

        -->
        <!-- ** Mark added this -->
        <Context docBase="/opt/develWorkspace/docPath/1.0/peopleanswers.com/dynamic" path="/"/>
        <!-- ** Raquet's cassandra update -->
        <Context reloadable="false" docBase="pa">
          <!-- cassandra settings -->
          <Environment name="cassandraServer1" type="java.lang.String" value="nucleus"/>
          <Environment name="cassandraServer2" type="java.lang.String" value="nucleus"/>
          <Environment name="cassandraPort" type="java.lang.Integer" value="9042"/>
          <Environment name="cassandraKeyspace" type="java.lang.String" value="pa"/>
          <Environment name="cassandraCryptographyKey" type="java.lang.String" value="zu613V2CRGXvGL1KvB5MqN1D6dEGefMlyZ1atpcuBHY="/>
          <!--*****************-->
          <!-- database config -->
          <!--*****************-->
          <!-- connection -->
          <Environment name="databaseURLPodMain" type="java.lang.String" value="jdbc:sqlserver://sqlserver:1433;DatabaseName=Pod_Main_1"/>
          <Environment name="databaseUser" type="java.lang.String" value="common"/>
          <Environment name="databasePassword" type="java.lang.String" value="xxxPA50"/>
          <Environment name="recommendedSqlBlockSize" type="java.lang.Integer" value="50"/>
        </Context>
        <!-- ** Mark added this -->
        <Context crossContext="false" debug="1" docBase="/opt/develWorkspace/Source/App/Tomcat_PA/WebRoot" fileEncoding="utf8" path="/pa" reloadable="false">
          <!-- ** Raquet's cassandra update -->
          <!-- Required: Server name and pod number -->
          <Environment name="serverName" type="java.lang.String" value="localhost"/>
          <!-- Commented out for multi-pod execution -->
          <!--<Environment name="podNumber" type="java.lang.Integer" value="1"/>-->
          <!--********-->
          <!-- logger -->
          <!--********-->
          <Logger className="org.apache.catalina.logger.FileLogger" prefix="pa_log." suffix=".txt" timestamp="true" verbosity="1"/>
          <!--********************-->
          <!-- application config -->
          <!--********************-->
          <Environment name="applicationTag" type="java.lang.String" value="pa"/>
          <Environment name="turnOffProcessThreadsOnDevelopment" type="java.lang.String" value="false"/>
          <Environment name="siteURL" type="java.lang.String" value="https://localhost:8443"/>
          <Environment name="siteBasePath" type="java.lang.String" value="/opt/develWorkspace/docPath/1.0/peopleanswers.com/dynamic"/>
          <Environment name="reportBasePath" type="java.lang.String" value="/opt/develWorkspace/docPath/1.0/Reports"/>
          <Environment name="canSwitchProtocols" type="java.lang.String" value="false"/>
          <Environment name="legacyServicesSecurityToken" type="java.lang.String" value="6qFUm0zxtcNG0W4YJBfEToKrw9Gz1sGYbRLahLypbecNdF5QlKouzckTnV09y3NH"/>
          <Environment name="userBasePath" type="java.lang.String" value="/opt/develWorkspace/docPath/1.0/Work/PeopleAnswers"/>
          <Environment name="systemUserBasePath" type="java.lang.String" value="/opt/develWorkspace/docPath/1.0/Work/PeopleAnswers/ca502540"/>
          <Environment name="marketingSiteTag" type="java.lang.String" value="site"/>
          <Environment name="virtualInternalAdminUrlPrefix" type="java.lang.String" value="https://localhost:9443/pa-internal-web"/>
          <!-- log4j -->
          <Environment name="log4JPropertyFileName" type="java.lang.String" value="/opt/develWorkspace/Servers/tomcat-pod-1/conf/log4jDebug.properties"/>
          <!-- encryption -->
          <Environment name="restrictedLoginCryptographyKey256" type="java.lang.String" value="dDKul2Qp1hiSHlFDNXxCdE4rtTAae9vob71MBoxWm0Y="/>
          <!-- run mode flags -->
          <Environment name="inProduction" type="java.lang.String" value="false"/>
          <Environment name="inStaging" type="java.lang.String" value="false"/>
          <Environment name="inDevelopment" type="java.lang.String" value="true"/>
          <Environment name="inStealthMode" type="java.lang.String" value="false"/>
          <Environment name="grabPrimaryServer" type="java.lang.String" value="true"/>
          <Environment name="canBePrimaryServer" type="java.lang.String" value="true"/>
          <Environment name="datagridIPAddress" type="java.lang.String" value="230.64.48.100"/>
          <Environment name="datagridPort" type="java.lang.Integer" value="40100"/>
          <Environment name="dataGridNoLazyLoad" type="java.lang.Boolean" value="false"/>
          <Environment name="loadTestDataGrid" type="java.lang.Boolean" value="false"/>
          <Environment name="bindRMINames" type="java.lang.String" value="false"/>
          <Environment name="includeServerNameInRMINaming" type="java.lang.Boolean" value="false"/>
          <Environment name="grabReportServer" type="java.lang.String" value="false"/>
          <Environment name="canBeReportServer" type="java.lang.String" value="true"/>
          <Environment name="useReportServer" type="java.lang.String" value="false"/>
          <!-- development mode flags -->
          <Environment name="turnOffProcessThreadsOnDevelopment" type="java.lang.String" value="true"/>
          <Environment name="allowFtpProcessThreadsInDevelopment" type="java.lang.String" value="false"/>
          <Environment name="useStubWebServicesLayer" type="java.lang.String" value="true"/>
          <!-- show stack traces on issue notification screen -->
          <Environment name="showStackTraces" type="java.lang.Boolean" value="true"/>
          <!--**********************-->
          <!-- application settings -->
          <!--**********************-->
          <!-- used to substitute files when requesting resumes, etc. appropriate for development or testing instances. -->
          <Environment name="useSubstituteFiles" type="java.lang.String" value="true"/>
          <Environment name="substituteFileName" type="java.lang.String" value="file"/>
          <Environment name="substituteFilePath" type="java.lang.String" value="/opt/develWorkspace/docPath/1.0/substituteFiles"/>
          <!--*****************-->
          <!-- database config -->
          <!--*****************-->
          <!-- connection -->
          <!-- Pod database config -->
          <Environment name="databaseURLPodMain" type="java.lang.String" value="jdbc:sqlserver://sqlserver:1433;DatabaseName=Pod_Main_1"/>
          <Environment name="databaseUser" type="java.lang.String" value="common"/>
          <Environment name="databasePassword" type="java.lang.String" value="xxxPA50"/>
          <Environment name="recommendedSqlBlockSize" type="java.lang.Integer" value="50"/>
          <!-- encryption -->
          <Environment name="cryptographyKey256" type="java.lang.String" value="InEvLnRgAePAzUuOglqiQg=="/>
          <!-- driver -->
          <Environment name="jdbc.dbDriverName" type="java.lang.String" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
          <!--************-->
          <!-- OpenOffice -->
          <!--************-->
          <Environment name="openOfficeBinDir" type="java.lang.String" value="/usr/bin"/>
          <!--*************-->
          <!-- LibreOffice -->
          <!--*************-->
          <Environment name="libreOfficePath" type="java.lang.String" value="/usr/bin"/>
          <Environment name="libreOfficeTempOutputDirectory" type="java.lang.String" value="/opt/develWorkspace/docPath/sandbox/libre/out"/>
          <Environment name="libreOfficeTempInputDirectory" type="java.lang.String" value="/opt/develWorkspace/docPath/sandboxlibre/in"/>
          <!--**************-->
          <!-- email config -->
          <!--**************-->
          <!-- smtp server (gmail) -->
          <Environment name="SMTPServerIPAddress" type="java.lang.String" value="smtp-relay.infor.com"/>
          <!-- in development mode, all email gets redirected to this inbox -->
          <Environment name="developmentTestEmail" type="java.lang.String" value="Robert.Wagner@infor.com"/>
          <!--*************************-->
          <!-- architecture 2.0 config -->
          <!--*************************-->
          <Environment name="integrateWithNewArchitecture" type="java.lang.Boolean" value="true"/>
          <Environment name="forceAllTestingToUseMobile" type="java.lang.Boolean" value="false"/>
          <Environment name="timeBasedOneTimeCodeGeneratorKey" type="java.lang.String" value="fc26ce20a3505c751b9711b5b5771da13eaec9bc"/>
          <Environment name="timeBasedOneTimeCodeGeneratorIntervalLength" type="java.lang.String" value="300000"/>
          <Environment name="mobileUrlPrefix" type="java.lang.String" value="https://localhost:9443/pa-testing-web"/>
          <!-- cache bridge -->
          <Environment name="messageBrokerActive" type="java.lang.Boolean" value="true"/>
          <Environment name="messageBrokerHostName1" type="java.lang.String" value="nucleus"/>
          <Environment name="messageBrokerHostName2" type="java.lang.String" value="nucleus"/>
          <Environment name="messageBrokerPort" type="java.lang.Integer" value="5672"/>
          <Environment name="messageBrokerUserName" type="java.lang.String" value="pa"/>
          <Environment name="messageBrokerPassword" type="java.lang.String" value="catfox"/>
          <Environment name="cacheBridgeLoadTest" type="java.lang.Boolean" value="false"/>
          <!-- shared session cache config -->
          <!-- This specifies the domain that will be used for the shared data cookie.  It should be

                                                                                     available to both architectures.  Normally, in dev, you will not need to set this as

                                                                                     the default value used is fine (both 1.0 and 2.0 run on the same domain : localhost).

                                                                                     For environments such as production, where 1.0 and 2.0 company admin are at different

                                                                                     urls, this should be set accordingly (.peopleanswers.com) -->
          <!-- <Environment name="sharedDataCookieDomain" type="java.lang.String" value="XXXX"/> -->
          <!-- should be your tomcat HTTP port, defined in the Connector above -->
          <Environment name="httpPortNumber" type="java.lang.Integer" value="8080"/>
          <!--*******************************************-->
          <!-- 2.0 company admin (virtual company admin) -->
          <!--*******************************************-->
          <!-- XXX should be your 2.0 port number -->
          <Environment name="virtualCompanyUrlPrefix" type="java.lang.String" value="https://localhost:9443/pa-company-web"/>
          <!--**************************************-->
          <!-- blofeld (remote file storage) config -->
          <!--**************************************-->
          <Environment name="remoteFileStoreCryptographyKey256" type="java.lang.String" value="HyzVYAgFn3CWG7imtuzmxPBVEjA3IH01J8saQz6RtII="/>
          <Environment name="remoteFileStoreClusterName" type="java.lang.String" value="blofeld"/>
          <Environment name="remoteFileStoreAuthenticationToken" type="java.lang.String" value="catfox"/>
          <Environment name="remoteFileStoreIpAddress1" type="java.lang.String" value="nucleus"/>
          <Environment name="remoteFileStorePort1" type="java.lang.Integer" value="6811"/>
          <Environment name="remoteFileStoreIpAddress2" type="java.lang.String" value="nucleus"/>
          <Environment name="remoteFileStorePort2" type="java.lang.Integer" value="6811"/>
          <Environment name="memcachedServerPort1" type="java.lang.String" value="nucleus:11211"/>
          <!-- cassandra settings -->
          <Environment name="cassandraServer1" type="java.lang.String" value="nucleus"/>
          <Environment name="cassandraServer2" type="java.lang.String" value="nucleus"/>
          <Environment name="cassandraPort" type="java.lang.Integer" value="9042"/>
          <Environment name="cassandraKeyspace" type="java.lang.String" value="pa"/>
          <Environment name="cassandraCryptographyKey" type="java.lang.String" value="zu613V2CRGXvGL1KvB5MqN1D6dEGefMlyZ1atpcuBHY="/>
        </Context>
        <!-- ** Marketing Site -->
        <Context crossContext="false" debug="1" docBase="/opt/develWorkspace/docPath/Source/App/Tomcat_Marketing/WebRoot" fileEncoding="utf8" path="/site" reloadable="false">
          <!--*****************-->
          <!-- database config -->
          <!--*****************-->
          <Resource description="TesterApp DataSource Reference" driverClassName="com.microsoft.sqlserver.jdbc.SQLServerDriver" factory="org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory" maxActive="200" maxIdle="30" maxWait="20000" name="jdbc/PeepDB" type="javax.sql.DataSource" url="jdbc:sqlserver://PA-DEV-DB.infor.com:1433;DatabaseName=marketing;username=mark;password=mark;"/>
          <!--********************-->
          <!-- application config -->
          <!--********************-->
          <Environment name="siteBasePath" type="java.lang.String" value="/opt/develWorkspace/docPath/1.0/peopleanswers.com/dynamic"/>
          <Environment name="applicationTag" type="java.lang.String" value="pa"/>
          <Environment name="marketingSiteTag" type="java.lang.String" value="site"/>
          <Environment name="siteBaseURLName" type="java.lang.String" value="localhost:8080/site"/>
          <!-- run mode flags -->
          <Environment name="inProduction" type="java.lang.String" value="false"/>
          <Environment name="inStaging" type="java.lang.String" value="false"/>
          <Environment name="inDevelopment" type="java.lang.String" value="true"/>
        </Context>
      </Host>
    </Engine>
  </Service>
</Server>
